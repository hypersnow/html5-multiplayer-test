{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","client/src/client.js","html5-multiplayer-test.min.js","client/src/entities/bullet.js","client/src/entities/player.js","client/src/states/boot.js","client/src/states/game.js","client/src/states/preload.js","node_modules/browserify/node_modules/process/browser.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","startGame","game","Phaser","Game","AUTO","socket","io","state","add","start","window","loaded","./states/boot.js","./states/game.js","./states/preload.js",2,"Bullet","x","y","direction","control","Sprite","this","physics","arcade","enable","anchor","setTo","speed","body","velocity","angle","dead","dieInterval","setInterval","die","bind","addHitEffect","existing","prototype","Object","create","constructor","moveUpdate","otherPlayers","platforms","bringToTop","overlap","hitOtherPlayer","clearInterval","bullet","otherPlayer","hitEffect","sprite","animations","play",3,"Player","gravity","updatedX","updatedY","scale","setSize","tint","Math","round","random","pow","toString","nickname","String","rnd","integerInRange","nicknameText","text","fontSize","fill","coinCount","coinText","jumping","jump","jumpPrevious","jumpAmount","jumpLimit","moveTimer","canShoot","shootPower","shootInterval","reshoot","bullets","group","classType","enableBody","g","cursors","collide","input","keyboard","isDown","Keyboard","A","D","left","right","abs","W","touching","down","addBullet","up","emit","stop","frame","hitBullet","distanceToXY","moveToXY","xBorder","yBorder","world","width","height","forEach","remove","destroy","player","./bullet",4,"Boot","scaleMode","ScaleManager","RESIZE","startSystem","Physics","ARCADE","setBounds","stage","disableVisibilityChange","smoothed",5,"sendIntervalTime","fixedSendIntervalTime","initSend","buddydistancetimer","onSocketConnect","setEventHandlers","sky","name","id","camera","follow","Camera","FOLLOW_PLATFORMER","addPlatform","coins","createCursorKeys","fixedToCamera","platform","immovable","checkCollision","on","onSocketDisconnect","onPlayerConnect","onPlayerUpdate","onPlayerDisconnect","onPlayers","onBullet","onCoin","onDestroyCoin","onGotCoin","update","collectCoin","coin","console","log","sendInterval","sendLoop","fixedSendLoop","msg","addOtherPlayer","tempSocket","removeAll","addCoin","sendPlayerUpdate","dx","dy","bounce","../entities/player",6,"process","Preload","preload","connect","loadingText","self","load","image","spritesheet","onLoadComplete","connectingText","env","PORT","_process",7,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"html5-multiplayer-test.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","window.game = null;\nwindow.socket = null;\nwindow.loaded = false;\n\nstartGame();\n\nfunction startGame() {\n  game = new Phaser.Game(800, 600, Phaser.AUTO, '');\n  socket = io();\n  \n  game.state.add('boot', require('./states/boot.js'));\n  game.state.add('preload', require('./states/preload.js'));\n  game.state.add('game', require('./states/game.js'));\n    \n  game.state.start('boot');\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nwindow.game = null;\nwindow.socket = null;\nwindow.loaded = false;\n\nstartGame();\n\nfunction startGame() {\n  game = new Phaser.Game(800, 600, Phaser.AUTO, '');\n  socket = io();\n  \n  game.state.add('boot', require('./states/boot.js'));\n  game.state.add('preload', require('./states/preload.js'));\n  game.state.add('game', require('./states/game.js'));\n    \n  game.state.start('boot');\n}\n},{\"./states/boot.js\":4,\"./states/game.js\":5,\"./states/preload.js\":6}],2:[function(require,module,exports){\nvar Bullet = function(x, y, direction, control) {\n    Phaser.Sprite.call(this, game, x, y, 'bullet', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    this.anchor.setTo(0.5, 0.5);\n    this.speed = 1000;\n    switch(direction)\n    {\n      case 'left':\n        this.body.velocity.x = -this.speed;\n        this.angle = 180;\n        break;\n      case 'right':\n        this.body.velocity.x = this.speed;\n        break;\n      case 'up':\n        this.body.velocity.y = -this.speed;\n        this.angle = 270;\n        break;\n      case 'down':\n        this.body.velocity.y = this.speed;\n        this.angle = 90;\n        break;\n    }\n    this.dead = false;\n    this.dieInterval = setInterval(this.die.bind(this), 300);\n    this.addHitEffect(this.x, this.y);\n    game.add.existing(this);\n};\n\nBullet.prototype = Object.create(Phaser.Sprite.prototype);\nBullet.prototype.constructor = Bullet;\n\nBullet.prototype.moveUpdate = function(otherPlayers, platforms) {\n  this.bringToTop();\n  if (this.control)\n    game.physics.arcade.overlap(this, otherPlayers, this.hitOtherPlayer, null, this);\n  if (this.game.physics.arcade.overlap(this, platforms))\n    this.die();\n  return this.dead;\n};\n\nBullet.prototype.die = function() {\n  this.dead = true;\n  this.addHitEffect(this.x, this.y);\n  clearInterval(this.dieInterval);\n};\n\nBullet.prototype.hitOtherPlayer = function(bullet, otherPlayer) {\n  otherPlayer.body.velocity.x += bullet.body.velocity.x;\n  otherPlayer.body.velocity.y += bullet.body.velocity.y;\n  this.dead = true;\n};\n\nBullet.prototype.addHitEffect = function(x, y) {\n  var hitEffect = game.add.sprite(x, y, 'hit');\n  hitEffect.anchor.setTo(0.5, 0.5);\n  hitEffect.animations.add('anim');\n  hitEffect.play('anim', 60, false, true);\n}\n\nmodule.exports = Bullet;\n},{}],3:[function(require,module,exports){\nvar Bullet = require(\"./bullet\");\n\nvar Player = function(control, x, y) {\n    Phaser.Sprite.call(this, game, x, y, 'player', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    if (control)\n      this.body.gravity.y = 3500;\n    this.updatedX = x;\n    this.updatedY = y;\n    this.animations.add('run', [1, 2], 10, true);\n    this.anchor.setTo(0.5, 1);\n    this.scale.x = 2;\n    this.scale.y = 2;\n    this.body.setSize(10, 30, 0, 0);\n    this.tint = '0x' + (Math.round(Math.random()*Math.pow(2, 24))).toString(16);\n    this.nickname = \"Player \" + String(game.rnd.integerInRange(1000, 9999));\n    this.nicknameText = game.add.text(x + 32, y - 16, this.nickname, { fontSize: '16px', fill: '#000' });\n    this.coinCount = 10;\n    this.coinText = game.add.text(x + 32, y - 32, this.coinCount + \"c\", { fontSize: '16px', fill: '#000' });\n    this.jumping = false;\n    this.jump = 600;\n    this.jumpPrevious = 0;\n    this.jumpAmount = 0;\n    this.jumpLimit = 8;\n    this.moveTimer = 0;\n    this.canShoot = true;\n    this.shootPower = 400;\n    this.shootInterval = setInterval(this.reshoot.bind(this), 120);\n    this.bullets = game.add.group();\n    this.bullets.classType = Bullet;\n    this.bullets.enableBody = true;\n    this.g = null;\n    game.add.existing(this);\n};\n\nPlayer.prototype = Object.create(Phaser.Sprite.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.moveUpdate = function(g, otherPlayers, platforms, cursors) {\n  this.g = g;\n  game.physics.arcade.collide(this, platforms);\n  if (this.control)\n  {\n    if (game.input.keyboard.isDown(Phaser.Keyboard.A))\n      this.body.velocity.x -= 50;\n    if (game.input.keyboard.isDown(Phaser.Keyboard.D))\n      this.body.velocity.x += 50;\n    if (!game.input.keyboard.isDown(Phaser.Keyboard.A) && !game.input.keyboard.isDown(Phaser.Keyboard.D) && !cursors.left.isDown && !cursors.right.isDown)\n    {\n      if (this.body.velocity.x > 0)\n        this.body.velocity.x -= 50;\n      else if (this.body.velocity.x < 0)\n        this.body.velocity.x += 50;\n      if (Math.abs(this.body.velocity.x) <= 100)\n        this.body.velocity.x = 0;\n    }\n    if (this.body.velocity.x > 800)\n      this.body.velocity.x = 800;\n    else if (this.body.velocity.x < -800)\n      this.body.velocity.x = -800;\n    if (this.body.velocity.x > 400)\n      this.body.velocity.x -= 100;\n    else if (this.body.velocity.x < -400)\n      this.body.velocity.x += 100;\n      \n    if (!this.jumping && game.input.keyboard.isDown(Phaser.Keyboard.W) && this.body.touching.down)\n    {\n      this.jumping = true;\n      this.jumpAmount = 0;\n    }\n    if (this.jumping)\n    {\n      this.body.velocity.y = -this.jump;\n      if (game.input.keyboard.isDown(Phaser.Keyboard.W) && this.jumpAmount <= this.jumpLimit)\n        this.jumpAmount++;\n      else\n        this.jumping = false;\n    }\n    this.jumpPrevious = this.y;\n    \n    if (this.canShoot)\n    {\n      this.addBullet(true, this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown, this.shootPower);\n      if (cursors.left.isDown || cursors.right.isDown || cursors.up.isDown || cursors.down.isDown)\n      {\n        socket.emit(\"bullet\", [this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown]);\n        this.canShoot = false;\n      }\n    }\n    \n    if (this.body.velocity.y != 0 && !this.body.touching.down)\n    {\n      this.animations.stop();\n      this.frame = 3;\n    }\n    else if (this.body.velocity.x != 0)\n    {\n      this.animations.play('run');\n    }\n    else\n    {\n      this.animations.stop();\n      this.frame = 0;\n    }\n    \n    if (this.body.velocity.x == 0 && this.body.velocity.y == 0)\n    {\n      if (this.moveTimer > 0)\n        this.moveTimer--;\n    }\n    else\n      this.moveTimer = 120;\n      \n    this.coinCount = g.coinCount;\n      \n    game.physics.arcade.overlap(this, this.bullets, this.hitBullet, null, this);\n  }\n  else\n  {\n    if (game.physics.arcade.distanceToXY(this, this.updatedX, this.updatedY) > 64)\n    {\n      this.x = this.updatedX;\n      this.y = this.updatedY;\n    }\n    game.physics.arcade.moveToXY(this, this.updatedX, this.updatedY, 300, 60);\n  }\n  \n  if (this.body.velocity.x != 0)\n  {\n    if (this.body.velocity.x > 0)\n      this.scale.x = 2;\n    else\n      this.scale.x = -2;\n  }\n  \n  var xBorder = 6;\n  var yBorder = 64;\n  if (this.x < -xBorder)\n    this.x = game.world.width + xBorder;\n  else if (this.x > game.world.width + xBorder)\n    this.x = -xBorder;\n    \n  if (this.y < -yBorder)\n    this.y = game.world.height + yBorder;\n  else if (this.y > game.world.height + yBorder)\n    this.y = -yBorder;\n    \n  this.bringToTop();\n  this.nicknameText.bringToTop();\n  this.nicknameText.text = this.nickname;\n  this.nicknameText.x = this.x - 46;\n  this.nicknameText.y = this.y - 84;\n  this.coinText.bringToTop();\n  this.coinText.text = this.coinCount + \"c\";\n  this.coinText.x = this.x - 46;\n  this.coinText.y = this.y - 100;\n  \n  this.bullets.forEach(function(bullet) {\n    if (bullet.moveUpdate(otherPlayers, platforms))\n      this.bullets.remove(bullet, true);\n  }, this);\n};\n\nPlayer.prototype.destroy = function() {\n  this.nicknameText.destroy();\n  this.coinText.destroy();\n  Phaser.Sprite.prototype.destroy.call(this);\n};\n\nPlayer.prototype.reshoot = function() {\n  this.canShoot = true;\n};\n\nPlayer.prototype.addBullet = function(control, x, y, left, right, up, down, shootPower) {\n  if (left)\n  {\n    if (control)\n      this.body.velocity.x += shootPower;\n    this.bullets.add(new Bullet(x, y, 'left', control));\n  }\n  if (right)\n  {\n    if (control)\n      this.body.velocity.x -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'right', control));\n  }\n  if (up)\n  {\n    if (control)\n      this.body.velocity.y += shootPower;\n    this.bullets.add(new Bullet(x, y, 'up', control));\n  }\n  if (down)\n  {\n    if (control)\n      this.body.velocity.y -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'down', control));\n  }\n};\n\nPlayer.prototype.hitBullet = function(player, bullet) {\n  if (!bullet.control)\n  {\n    this.body.velocity.x += bullet.body.velocity.x;\n    this.body.velocity.y += bullet.body.velocity.y;\n    bullet.destroy();\n    if (this.g.coinCount > 0)\n    {\n      socket.emit(\"player hit\", [this.x, this.y - 16]);\n      this.g.coinCount--;\n      this.g.coinText.text = 'Coins: ' + this.g.coinCount;\n    }\n  }\n};\n\nmodule.exports = Player;\n\n\n},{\"./bullet\":2}],4:[function(require,module,exports){\nvar Boot = function() {}\n\nmodule.exports = Boot;\n\nBoot.prototype = {\n  create: function() {\n    game.scale.scaleMode = Phaser.ScaleManager.RESIZE;\n    game.physics.startSystem(Phaser.Physics.ARCADE);\n    game.world.setBounds(0, 0, 2000, 2000);\n    game.stage.disableVisibilityChange = true;\n    game.stage.smoothed = false;\n    \n    game.state.start('preload');\n  }\n};\n},{}],5:[function(require,module,exports){\nvar Player = require(\"../entities/player\");\n\nvar Game = function() {};\n\nmodule.exports = Game;\n\nGame.prototype = {\n  sendIntervalTime: 60,\n  fixedSendIntervalTime: 600,\n  initSend: false,\n  buddydistancetimer: 0,\n  \n  create: function() {\n    this.onSocketConnect();\n    this.setEventHandlers();\n    \n    var sky = game.add.sprite(0, 0, 'sky');\n    sky.width = game.world.width;\n    sky.height = game.world.height;\n    \n    this.player = new Player(true, 30, 30);\n    this.player.name = socket.id;\n    game.camera.follow(this.player, Phaser.Camera.FOLLOW_PLATFORMER);\n    this.initSend = true;\n    \n    this.otherPlayers = game.add.group();\n    this.otherPlayers.classType = Player;\n    this.otherPlayers.enableBody = true;\n    \n    this.platforms = game.add.group();\n    this.platforms.enableBody = true;\n    this.addPlatform(0, game.world.height - 64, 2, 2);\n    this.addPlatform(400, 400, 200, 2);\n    this.addPlatform(0, 250, 1, 1);\n    this.addPlatform(600, 300, 1, 1);\n    this.addPlatform(800, 1500, 1, 1);\n    this.addPlatform(1200, 900, 1, 1);\n    \n    this.coins = game.add.group();\n    this.coins.enableBody = true;\n    \n    this.cursors = game.input.keyboard.createCursorKeys();\n    \n    this.coinCount = 10;\n    this.coinText = game.add.text(16, 16, 'Coins: ' + this.coinCount, { fontSize: '32px', fill: '#000' });\n    this.coinText.fixedToCamera = true;\n  },\n  \n  addPlatform: function(x, y, width, height) {\n    var platform = this.platforms.create(x, y, 'ground');\n    platform.scale.setTo(width, height);\n    platform.body.immovable = true;\n    platform.body.checkCollision.left = false;\n    platform.body.checkCollision.right = false;\n    platform.body.checkCollision.down = false;\n  },\n  \n  setEventHandlers: function() {\n    socket.on(\"connect\", this.onSocketConnect.bind(this));\n    socket.on(\"disconnect\", this.onSocketDisconnect.bind(this));\n    socket.on(\"player connect\", this.onPlayerConnect.bind(this));\n    socket.on(\"player update\", this.onPlayerUpdate.bind(this));\n    socket.on(\"player disconnect\", this.onPlayerDisconnect.bind(this));\n    socket.on(\"players\", this.onPlayers.bind(this));\n    socket.on(\"player count\", this.onPlayers.bind(this));\n    socket.on(\"bullet\", this.onBullet.bind(this));\n    socket.on(\"coin\", this.onCoin.bind(this));\n    socket.on(\"destroy coin\", this.onDestroyCoin.bind(this));\n    socket.on(\"got coin\", this.onGotCoin.bind(this));\n  },\n\n  update: function() {\n    this.player.moveUpdate(this, this.otherPlayers, this.platforms, this.cursors);\n    this.game.physics.arcade.collide(this.coins, this.platforms);\n    this.game.physics.arcade.overlap(this.player, this.coins, this.collectCoin, null, this);\n    \n    this.otherPlayers.forEach(function(otherPlayer) {\n      otherPlayer.moveUpdate(this, this.otherPlayers, this.platforms, this.cursors);\n    }, this);\n    \n    this.coins.forEach(function(coin) {\n      var xBorder = 6;\n      var yBorder = 64;\n      if (coin.x < -xBorder)\n        coin.x = game.world.width + xBorder;\n      else if (coin.x > game.world.width + xBorder)\n        coin.x = -xBorder;\n        \n      if (coin.y < -yBorder)\n        coin.y = game.world.height + yBorder;\n      else if (coin.y > game.world.height + yBorder)\n        coin.y = -yBorder;\n        \n      if (coin.body.velocity.x > 0)\n        coin.body.velocity.x -= 2;\n      else if (coin.body.velocity.x < 0)\n        coin.body.velocity.x += 2;\n    }, this);\n  },\n\n  collectCoin: function(player, coin) {\n    socket.emit(\"got coin\", coin.name);\n  },\n\n  onSocketConnect: function() {\n    console.log(\"connected to server\");\n    this.sendInterval = setInterval(this.sendLoop.bind(this), this.sendIntervalTime);\n    this.sendInterval = setInterval(this.fixedSendLoop.bind(this), this.fixedSendIntervalTime);\n  },\n\n  onSocketDisconnect: function() {\n    console.log(\"disconnected from server\");\n    clearInterval(this.sendInterval);\n    game.state.start('preload');\n  },\n\n  onPlayerConnect: function(msg) {\n    this.addOtherPlayer(msg);\n    console.log(\"new player connected with id \" + msg[1]);\n  },\n\n  onPlayerUpdate: function(msg) {\n    for(var tempSocket in msg) {\n      this.otherPlayers.forEach(function(otherPlayer) {\n        if (msg[tempSocket][0] == otherPlayer.name)\n        {\n          otherPlayer.updatedX = msg[tempSocket][1];\n          otherPlayer.updatedY = msg[tempSocket][2];\n          otherPlayer.frame = msg[tempSocket][3];\n          otherPlayer.body.velocity.x = msg[tempSocket][4];\n          otherPlayer.body.velocity.y = msg[tempSocket][5];\n          otherPlayer.coinCount = msg[tempSocket][6];\n        }\n        else if (msg[tempSocket][0] == this.player.name)\n          this.player.coinCount = msg[tempSocket][6];\n      }, this);\n    }\n  },\n\n  onPlayerDisconnect: function(msg) {\n    this.otherPlayers.forEach(function(otherPlayer) {\n      if (msg == \"/#\" + otherPlayer.name)\n      {\n        this.otherPlayers.remove(otherPlayer);\n        otherPlayer.destroy();\n        console.log(\"player dced\");\n      }\n    }, this);\n  },\n  \n  onPlayers: function(msg) {\n    this.otherPlayers.removeAll(true);\n    for(var tempSocket in msg) {\n      if (msg[tempSocket][1] != this.player.name)\n        this.addOtherPlayer(msg[tempSocket]);\n    }\n  },\n  \n  onBullet: function(msg) {\n    this.player.addBullet(false, msg[0], msg[1], msg[2], msg[3], msg[4], msg[5], this.player.shootPower);\n  },\n  \n  onCoin: function(msg) {\n    this.addCoin(msg[0], msg[1], msg[2], msg[3], msg[4]);\n  },\n  \n  onDestroyCoin: function(msg) {\n    this.coins.forEach(function(coin) {\n      if (coin.name == msg)\n      {\n        this.coins.remove(coin);\n        coin.destroy();\n        this.addHitEffect(coin.x, coin.y);\n      }\n    }, this);\n  },\n  \n  onGotCoin: function(msg) {\n    this.coinCount++;\n    this.coinText.text = 'Coins: ' + this.coinCount;\n    this.sendPlayerUpdate();\n  },\n  \n  fixedSendLoop: function() {\n    this.sendPlayerUpdate();\n    socket.emit(\"player count\", this.otherPlayers.length + 1);\n  },\n  \n  sendLoop: function() {\n    if (this.initSend)\n    {\n      socket.emit(\"player init\", [true, this.player.name, this.player.x, this.player.y, this.player.frame, this.player.nickname, this.player.tint, this.player.body.velocity.x, this.player.body.velocity.y, this.coinCount]);\n      this.initSend = false;\n    }\n    else if (this.player.body.velocity.x != 0 || this.player.body.velocity.y != 0 || this.player.moveTimer > 0)\n      this.sendPlayerUpdate();\n  },\n  \n  sendPlayerUpdate: function() {\n    socket.emit(\"player update\", [true, this.player.x, this.player.y, this.player.frame, this.player.body.velocity.x, this.player.body.velocity.y, this.coinCount]);\n  },\n  \n  addOtherPlayer: function(msg) {\n    var otherPlayer = this.otherPlayers.add(new Player(false, msg[2], msg[3]));\n    otherPlayer.name = msg[1];\n    otherPlayer.frame = msg[4];\n    otherPlayer.nickname = msg[5];\n    otherPlayer.tint = msg[6];\n    otherPlayer.body.velocity.x = msg[7];\n    otherPlayer.body.velocity.y = msg[8];\n  },\n  \n  addHitEffect: function(x, y) {\n    var hitEffect = game.add.sprite(x, y, 'hit');\n    hitEffect.anchor.setTo(0.5, 0.5);\n    hitEffect.animations.add('anim');\n    hitEffect.play('anim', 60, false, true);\n  },\n  \n  addCoin: function(x, y, dx, dy, id) {\n    var coin = this.coins.create(x, y, 'coin');\n    coin.name = id;\n    coin.anchor.setTo(0.5, 0.5);\n    coin.animations.add('spin');\n    coin.animations.play('spin', 40, true);\n    coin.body.gravity.y = 1000;\n    coin.body.bounce.y = 0.7;\n    coin.body.velocity.x = dx;\n    coin.body.velocity.y = dy;\n  }\n};\n},{\"../entities/player\":3}],6:[function(require,module,exports){\n(function (process){\nvar Preload = function() {}\n\nmodule.exports = Preload;\n\nPreload.prototype = {\n  preload: function() {\n    if (!loaded)\n    {\n      var loadingText = game.add.text(16, 16, 'Loading...', {fontSize: '24px', fill: '#FFFFFF'});\n      var self = this;\n      game.load.image('sky', '../assets/sky.png');\n      game.load.image('ground', '../assets/platform.png');\n      game.load.image('bullet', '../assets/bullet.png');\n      game.load.image('pixel', '../assets/pixel.png');\n      game.load.spritesheet('player', '../assets/player.png', 32, 32);\n      game.load.spritesheet('coin', '../assets/coin.png', 32, 32)\n      game.load.spritesheet('hit', '../assets/hit.png', 32, 32);\n      game.load.onLoadComplete.add(function() {\n        loaded = true;\n        loadingText.destroy();\n        self.connect();\n      });\n    }\n    else\n      this.connect();\n  },\n\n  connect: function() {\n    var connectingText = game.add.text(16, 16, 'Connecting...', {fontSize: '24px', fill: '#FFFFFF'});\n    socket = io.connect(process.env.PORT);\n    socket.on(\"connect\", function() {\n      connectingText.destroy();\n      game.state.start('game');\n    });\n  },\n};\n}).call(this,require('_process'))\n\n},{\"_process\":7}],7:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}]},{},[1])\n\n","var Bullet = function(x, y, direction, control) {\n    Phaser.Sprite.call(this, game, x, y, 'bullet', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    this.anchor.setTo(0.5, 0.5);\n    this.speed = 1000;\n    switch(direction)\n    {\n      case 'left':\n        this.body.velocity.x = -this.speed;\n        this.angle = 180;\n        break;\n      case 'right':\n        this.body.velocity.x = this.speed;\n        break;\n      case 'up':\n        this.body.velocity.y = -this.speed;\n        this.angle = 270;\n        break;\n      case 'down':\n        this.body.velocity.y = this.speed;\n        this.angle = 90;\n        break;\n    }\n    this.dead = false;\n    this.dieInterval = setInterval(this.die.bind(this), 300);\n    this.addHitEffect(this.x, this.y);\n    game.add.existing(this);\n};\n\nBullet.prototype = Object.create(Phaser.Sprite.prototype);\nBullet.prototype.constructor = Bullet;\n\nBullet.prototype.moveUpdate = function(otherPlayers, platforms) {\n  this.bringToTop();\n  if (this.control)\n    game.physics.arcade.overlap(this, otherPlayers, this.hitOtherPlayer, null, this);\n  if (this.game.physics.arcade.overlap(this, platforms))\n    this.die();\n  return this.dead;\n};\n\nBullet.prototype.die = function() {\n  this.dead = true;\n  this.addHitEffect(this.x, this.y);\n  clearInterval(this.dieInterval);\n};\n\nBullet.prototype.hitOtherPlayer = function(bullet, otherPlayer) {\n  otherPlayer.body.velocity.x += bullet.body.velocity.x;\n  otherPlayer.body.velocity.y += bullet.body.velocity.y;\n  this.dead = true;\n};\n\nBullet.prototype.addHitEffect = function(x, y) {\n  var hitEffect = game.add.sprite(x, y, 'hit');\n  hitEffect.anchor.setTo(0.5, 0.5);\n  hitEffect.animations.add('anim');\n  hitEffect.play('anim', 60, false, true);\n}\n\nmodule.exports = Bullet;","var Bullet = require(\"./bullet\");\n\nvar Player = function(control, x, y) {\n    Phaser.Sprite.call(this, game, x, y, 'player', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    if (control)\n      this.body.gravity.y = 3500;\n    this.updatedX = x;\n    this.updatedY = y;\n    this.animations.add('run', [1, 2], 10, true);\n    this.anchor.setTo(0.5, 1);\n    this.scale.x = 2;\n    this.scale.y = 2;\n    this.body.setSize(10, 30, 0, 0);\n    this.tint = '0x' + (Math.round(Math.random()*Math.pow(2, 24))).toString(16);\n    this.nickname = \"Player \" + String(game.rnd.integerInRange(1000, 9999));\n    this.nicknameText = game.add.text(x + 32, y - 16, this.nickname, { fontSize: '16px', fill: '#000' });\n    this.coinCount = 10;\n    this.coinText = game.add.text(x + 32, y - 32, this.coinCount + \"c\", { fontSize: '16px', fill: '#000' });\n    this.jumping = false;\n    this.jump = 600;\n    this.jumpPrevious = 0;\n    this.jumpAmount = 0;\n    this.jumpLimit = 8;\n    this.moveTimer = 0;\n    this.canShoot = true;\n    this.shootPower = 400;\n    this.shootInterval = setInterval(this.reshoot.bind(this), 120);\n    this.bullets = game.add.group();\n    this.bullets.classType = Bullet;\n    this.bullets.enableBody = true;\n    this.g = null;\n    game.add.existing(this);\n};\n\nPlayer.prototype = Object.create(Phaser.Sprite.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.moveUpdate = function(g, otherPlayers, platforms, cursors) {\n  this.g = g;\n  game.physics.arcade.collide(this, platforms);\n  if (this.control)\n  {\n    if (game.input.keyboard.isDown(Phaser.Keyboard.A))\n      this.body.velocity.x -= 50;\n    if (game.input.keyboard.isDown(Phaser.Keyboard.D))\n      this.body.velocity.x += 50;\n    if (!game.input.keyboard.isDown(Phaser.Keyboard.A) && !game.input.keyboard.isDown(Phaser.Keyboard.D) && !cursors.left.isDown && !cursors.right.isDown)\n    {\n      if (this.body.velocity.x > 0)\n        this.body.velocity.x -= 50;\n      else if (this.body.velocity.x < 0)\n        this.body.velocity.x += 50;\n      if (Math.abs(this.body.velocity.x) <= 100)\n        this.body.velocity.x = 0;\n    }\n    if (this.body.velocity.x > 800)\n      this.body.velocity.x = 800;\n    else if (this.body.velocity.x < -800)\n      this.body.velocity.x = -800;\n    if (this.body.velocity.x > 400)\n      this.body.velocity.x -= 100;\n    else if (this.body.velocity.x < -400)\n      this.body.velocity.x += 100;\n      \n    if (!this.jumping && game.input.keyboard.isDown(Phaser.Keyboard.W) && this.body.touching.down)\n    {\n      this.jumping = true;\n      this.jumpAmount = 0;\n    }\n    if (this.jumping)\n    {\n      this.body.velocity.y = -this.jump;\n      if (game.input.keyboard.isDown(Phaser.Keyboard.W) && this.jumpAmount <= this.jumpLimit)\n        this.jumpAmount++;\n      else\n        this.jumping = false;\n    }\n    this.jumpPrevious = this.y;\n    \n    if (this.canShoot)\n    {\n      this.addBullet(true, this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown, this.shootPower);\n      if (cursors.left.isDown || cursors.right.isDown || cursors.up.isDown || cursors.down.isDown)\n      {\n        socket.emit(\"bullet\", [this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown]);\n        this.canShoot = false;\n      }\n    }\n    \n    if (this.body.velocity.y != 0 && !this.body.touching.down)\n    {\n      this.animations.stop();\n      this.frame = 3;\n    }\n    else if (this.body.velocity.x != 0)\n    {\n      this.animations.play('run');\n    }\n    else\n    {\n      this.animations.stop();\n      this.frame = 0;\n    }\n    \n    if (this.body.velocity.x == 0 && this.body.velocity.y == 0)\n    {\n      if (this.moveTimer > 0)\n        this.moveTimer--;\n    }\n    else\n      this.moveTimer = 120;\n      \n    this.coinCount = g.coinCount;\n      \n    game.physics.arcade.overlap(this, this.bullets, this.hitBullet, null, this);\n  }\n  else\n  {\n    if (game.physics.arcade.distanceToXY(this, this.updatedX, this.updatedY) > 64)\n    {\n      this.x = this.updatedX;\n      this.y = this.updatedY;\n    }\n    game.physics.arcade.moveToXY(this, this.updatedX, this.updatedY, 300, 60);\n  }\n  \n  if (this.body.velocity.x != 0)\n  {\n    if (this.body.velocity.x > 0)\n      this.scale.x = 2;\n    else\n      this.scale.x = -2;\n  }\n  \n  var xBorder = 6;\n  var yBorder = 64;\n  if (this.x < -xBorder)\n    this.x = game.world.width + xBorder;\n  else if (this.x > game.world.width + xBorder)\n    this.x = -xBorder;\n    \n  if (this.y < -yBorder)\n    this.y = game.world.height + yBorder;\n  else if (this.y > game.world.height + yBorder)\n    this.y = -yBorder;\n    \n  this.bringToTop();\n  this.nicknameText.bringToTop();\n  this.nicknameText.text = this.nickname;\n  this.nicknameText.x = this.x - 46;\n  this.nicknameText.y = this.y - 84;\n  this.coinText.bringToTop();\n  this.coinText.text = this.coinCount + \"c\";\n  this.coinText.x = this.x - 46;\n  this.coinText.y = this.y - 100;\n  \n  this.bullets.forEach(function(bullet) {\n    if (bullet.moveUpdate(otherPlayers, platforms))\n      this.bullets.remove(bullet, true);\n  }, this);\n};\n\nPlayer.prototype.destroy = function() {\n  this.nicknameText.destroy();\n  this.coinText.destroy();\n  Phaser.Sprite.prototype.destroy.call(this);\n};\n\nPlayer.prototype.reshoot = function() {\n  this.canShoot = true;\n};\n\nPlayer.prototype.addBullet = function(control, x, y, left, right, up, down, shootPower) {\n  if (left)\n  {\n    if (control)\n      this.body.velocity.x += shootPower;\n    this.bullets.add(new Bullet(x, y, 'left', control));\n  }\n  if (right)\n  {\n    if (control)\n      this.body.velocity.x -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'right', control));\n  }\n  if (up)\n  {\n    if (control)\n      this.body.velocity.y += shootPower;\n    this.bullets.add(new Bullet(x, y, 'up', control));\n  }\n  if (down)\n  {\n    if (control)\n      this.body.velocity.y -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'down', control));\n  }\n};\n\nPlayer.prototype.hitBullet = function(player, bullet) {\n  if (!bullet.control)\n  {\n    this.body.velocity.x += bullet.body.velocity.x;\n    this.body.velocity.y += bullet.body.velocity.y;\n    bullet.destroy();\n    if (this.g.coinCount > 0)\n    {\n      socket.emit(\"player hit\", [this.x, this.y - 16]);\n      this.g.coinCount--;\n      this.g.coinText.text = 'Coins: ' + this.g.coinCount;\n    }\n  }\n};\n\nmodule.exports = Player;\n\n","var Boot = function() {}\n\nmodule.exports = Boot;\n\nBoot.prototype = {\n  create: function() {\n    game.scale.scaleMode = Phaser.ScaleManager.RESIZE;\n    game.physics.startSystem(Phaser.Physics.ARCADE);\n    game.world.setBounds(0, 0, 2000, 2000);\n    game.stage.disableVisibilityChange = true;\n    game.stage.smoothed = false;\n    \n    game.state.start('preload');\n  }\n};","var Player = require(\"../entities/player\");\n\nvar Game = function() {};\n\nmodule.exports = Game;\n\nGame.prototype = {\n  sendIntervalTime: 60,\n  fixedSendIntervalTime: 600,\n  initSend: false,\n  buddydistancetimer: 0,\n  \n  create: function() {\n    this.onSocketConnect();\n    this.setEventHandlers();\n    \n    var sky = game.add.sprite(0, 0, 'sky');\n    sky.width = game.world.width;\n    sky.height = game.world.height;\n    \n    this.player = new Player(true, 30, 30);\n    this.player.name = socket.id;\n    game.camera.follow(this.player, Phaser.Camera.FOLLOW_PLATFORMER);\n    this.initSend = true;\n    \n    this.otherPlayers = game.add.group();\n    this.otherPlayers.classType = Player;\n    this.otherPlayers.enableBody = true;\n    \n    this.platforms = game.add.group();\n    this.platforms.enableBody = true;\n    this.addPlatform(0, game.world.height - 64, 2, 2);\n    this.addPlatform(400, 400, 200, 2);\n    this.addPlatform(0, 250, 1, 1);\n    this.addPlatform(600, 300, 1, 1);\n    this.addPlatform(800, 1500, 1, 1);\n    this.addPlatform(1200, 900, 1, 1);\n    \n    this.coins = game.add.group();\n    this.coins.enableBody = true;\n    \n    this.cursors = game.input.keyboard.createCursorKeys();\n    \n    this.coinCount = 10;\n    this.coinText = game.add.text(16, 16, 'Coins: ' + this.coinCount, { fontSize: '32px', fill: '#000' });\n    this.coinText.fixedToCamera = true;\n  },\n  \n  addPlatform: function(x, y, width, height) {\n    var platform = this.platforms.create(x, y, 'ground');\n    platform.scale.setTo(width, height);\n    platform.body.immovable = true;\n    platform.body.checkCollision.left = false;\n    platform.body.checkCollision.right = false;\n    platform.body.checkCollision.down = false;\n  },\n  \n  setEventHandlers: function() {\n    socket.on(\"connect\", this.onSocketConnect.bind(this));\n    socket.on(\"disconnect\", this.onSocketDisconnect.bind(this));\n    socket.on(\"player connect\", this.onPlayerConnect.bind(this));\n    socket.on(\"player update\", this.onPlayerUpdate.bind(this));\n    socket.on(\"player disconnect\", this.onPlayerDisconnect.bind(this));\n    socket.on(\"players\", this.onPlayers.bind(this));\n    socket.on(\"player count\", this.onPlayers.bind(this));\n    socket.on(\"bullet\", this.onBullet.bind(this));\n    socket.on(\"coin\", this.onCoin.bind(this));\n    socket.on(\"destroy coin\", this.onDestroyCoin.bind(this));\n    socket.on(\"got coin\", this.onGotCoin.bind(this));\n  },\n\n  update: function() {\n    this.player.moveUpdate(this, this.otherPlayers, this.platforms, this.cursors);\n    this.game.physics.arcade.collide(this.coins, this.platforms);\n    this.game.physics.arcade.overlap(this.player, this.coins, this.collectCoin, null, this);\n    \n    this.otherPlayers.forEach(function(otherPlayer) {\n      otherPlayer.moveUpdate(this, this.otherPlayers, this.platforms, this.cursors);\n    }, this);\n    \n    this.coins.forEach(function(coin) {\n      var xBorder = 6;\n      var yBorder = 64;\n      if (coin.x < -xBorder)\n        coin.x = game.world.width + xBorder;\n      else if (coin.x > game.world.width + xBorder)\n        coin.x = -xBorder;\n        \n      if (coin.y < -yBorder)\n        coin.y = game.world.height + yBorder;\n      else if (coin.y > game.world.height + yBorder)\n        coin.y = -yBorder;\n        \n      if (coin.body.velocity.x > 0)\n        coin.body.velocity.x -= 2;\n      else if (coin.body.velocity.x < 0)\n        coin.body.velocity.x += 2;\n    }, this);\n  },\n\n  collectCoin: function(player, coin) {\n    socket.emit(\"got coin\", coin.name);\n  },\n\n  onSocketConnect: function() {\n    console.log(\"connected to server\");\n    this.sendInterval = setInterval(this.sendLoop.bind(this), this.sendIntervalTime);\n    this.sendInterval = setInterval(this.fixedSendLoop.bind(this), this.fixedSendIntervalTime);\n  },\n\n  onSocketDisconnect: function() {\n    console.log(\"disconnected from server\");\n    clearInterval(this.sendInterval);\n    game.state.start('preload');\n  },\n\n  onPlayerConnect: function(msg) {\n    this.addOtherPlayer(msg);\n    console.log(\"new player connected with id \" + msg[1]);\n  },\n\n  onPlayerUpdate: function(msg) {\n    for(var tempSocket in msg) {\n      this.otherPlayers.forEach(function(otherPlayer) {\n        if (msg[tempSocket][0] == otherPlayer.name)\n        {\n          otherPlayer.updatedX = msg[tempSocket][1];\n          otherPlayer.updatedY = msg[tempSocket][2];\n          otherPlayer.frame = msg[tempSocket][3];\n          otherPlayer.body.velocity.x = msg[tempSocket][4];\n          otherPlayer.body.velocity.y = msg[tempSocket][5];\n          otherPlayer.coinCount = msg[tempSocket][6];\n        }\n        else if (msg[tempSocket][0] == this.player.name)\n          this.player.coinCount = msg[tempSocket][6];\n      }, this);\n    }\n  },\n\n  onPlayerDisconnect: function(msg) {\n    this.otherPlayers.forEach(function(otherPlayer) {\n      if (msg == \"/#\" + otherPlayer.name)\n      {\n        this.otherPlayers.remove(otherPlayer);\n        otherPlayer.destroy();\n        console.log(\"player dced\");\n      }\n    }, this);\n  },\n  \n  onPlayers: function(msg) {\n    this.otherPlayers.removeAll(true);\n    for(var tempSocket in msg) {\n      if (msg[tempSocket][1] != this.player.name)\n        this.addOtherPlayer(msg[tempSocket]);\n    }\n  },\n  \n  onBullet: function(msg) {\n    this.player.addBullet(false, msg[0], msg[1], msg[2], msg[3], msg[4], msg[5], this.player.shootPower);\n  },\n  \n  onCoin: function(msg) {\n    this.addCoin(msg[0], msg[1], msg[2], msg[3], msg[4]);\n  },\n  \n  onDestroyCoin: function(msg) {\n    this.coins.forEach(function(coin) {\n      if (coin.name == msg)\n      {\n        this.coins.remove(coin);\n        coin.destroy();\n        this.addHitEffect(coin.x, coin.y);\n      }\n    }, this);\n  },\n  \n  onGotCoin: function(msg) {\n    this.coinCount++;\n    this.coinText.text = 'Coins: ' + this.coinCount;\n    this.sendPlayerUpdate();\n  },\n  \n  fixedSendLoop: function() {\n    this.sendPlayerUpdate();\n    socket.emit(\"player count\", this.otherPlayers.length + 1);\n  },\n  \n  sendLoop: function() {\n    if (this.initSend)\n    {\n      socket.emit(\"player init\", [true, this.player.name, this.player.x, this.player.y, this.player.frame, this.player.nickname, this.player.tint, this.player.body.velocity.x, this.player.body.velocity.y, this.coinCount]);\n      this.initSend = false;\n    }\n    else if (this.player.body.velocity.x != 0 || this.player.body.velocity.y != 0 || this.player.moveTimer > 0)\n      this.sendPlayerUpdate();\n  },\n  \n  sendPlayerUpdate: function() {\n    socket.emit(\"player update\", [true, this.player.x, this.player.y, this.player.frame, this.player.body.velocity.x, this.player.body.velocity.y, this.coinCount]);\n  },\n  \n  addOtherPlayer: function(msg) {\n    var otherPlayer = this.otherPlayers.add(new Player(false, msg[2], msg[3]));\n    otherPlayer.name = msg[1];\n    otherPlayer.frame = msg[4];\n    otherPlayer.nickname = msg[5];\n    otherPlayer.tint = msg[6];\n    otherPlayer.body.velocity.x = msg[7];\n    otherPlayer.body.velocity.y = msg[8];\n  },\n  \n  addHitEffect: function(x, y) {\n    var hitEffect = game.add.sprite(x, y, 'hit');\n    hitEffect.anchor.setTo(0.5, 0.5);\n    hitEffect.animations.add('anim');\n    hitEffect.play('anim', 60, false, true);\n  },\n  \n  addCoin: function(x, y, dx, dy, id) {\n    var coin = this.coins.create(x, y, 'coin');\n    coin.name = id;\n    coin.anchor.setTo(0.5, 0.5);\n    coin.animations.add('spin');\n    coin.animations.play('spin', 40, true);\n    coin.body.gravity.y = 1000;\n    coin.body.bounce.y = 0.7;\n    coin.body.velocity.x = dx;\n    coin.body.velocity.y = dy;\n  }\n};","var Preload = function() {}\n\nmodule.exports = Preload;\n\nPreload.prototype = {\n  preload: function() {\n    if (!loaded)\n    {\n      var loadingText = game.add.text(16, 16, 'Loading...', {fontSize: '24px', fill: '#FFFFFF'});\n      var self = this;\n      game.load.image('sky', '../assets/sky.png');\n      game.load.image('ground', '../assets/platform.png');\n      game.load.image('bullet', '../assets/bullet.png');\n      game.load.image('pixel', '../assets/pixel.png');\n      game.load.spritesheet('player', '../assets/player.png', 32, 32);\n      game.load.spritesheet('coin', '../assets/coin.png', 32, 32)\n      game.load.spritesheet('hit', '../assets/hit.png', 32, 32);\n      game.load.onLoadComplete.add(function() {\n        loaded = true;\n        loadingText.destroy();\n        self.connect();\n      });\n    }\n    else\n      this.connect();\n  },\n\n  connect: function() {\n    var connectingText = game.add.text(16, 16, 'Connecting...', {fontSize: '24px', fill: '#FFFFFF'});\n    socket = io.connect(process.env.PORT);\n    socket.on(\"connect\", function() {\n      connectingText.destroy();\n      game.state.start('game');\n    });\n  },\n};","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"]}