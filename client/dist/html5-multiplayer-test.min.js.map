{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","client/src/client.js","html5-multiplayer-test.min.js","client/src/entities/bullet.js","client/src/entities/player.js","client/src/states/boot.js","client/src/states/game.js","client/src/states/preload.js","node_modules/browserify/node_modules/process/browser.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","startGame","game","Phaser","Game","AUTO","socket","io","state","add","start","window","loaded","./states/boot.js","./states/game.js","./states/preload.js",2,"Bullet","x","y","direction","control","Sprite","this","physics","arcade","enable","anchor","setTo","speed","body","velocity","angle","dead","setInterval","die","bind","existing","prototype","Object","create","constructor","moveUpdate","otherPlayers","platforms","bringToTop","overlap","hitOtherPlayer","bullet","otherPlayer",3,"Player","gravity","updatedX","updatedY","animations","scale","setSize","tint","Math","round","random","pow","toString","nickname","String","rnd","integerInRange","nicknameText","text","fontSize","fill","jumping","jump","jumpPrevious","jumpAmount","jumpLimit","moveTimer","canShoot","shootPower","shootInterval","reshoot","bullets","group","classType","enableBody","cursors","collide","input","keyboard","isDown","Keyboard","A","D","left","right","abs","W","touching","down","addBullet","up","emit","play","stop","frame","hitBullet","distanceToXY","moveToXY","xBorder","yBorder","world","width","height","forEach","remove","destroy","player","./bullet",4,"Boot","scaleMode","ScaleManager","RESIZE","startSystem","Physics","ARCADE","setBounds","stage","smoothed",5,"sendIntervalTime","fixedSendIntervalTime","initSend","buddydistancetimer","onSocketConnect","setEventHandlers","sky","sprite","name","id","camera","follow","Camera","FOLLOW_PLATFORMER","addPlatform","stars","star","bounce","createCursorKeys","score","scoreText","fixedToCamera","platform","immovable","checkCollision","on","onSocketDisconnect","onPlayerConnect","onPlayerUpdate","onPlayerDisconnect","onPlayers","onBullet","update","collectStar","kill","console","log","sendInterval","sendLoop","fixedSendLoop","clearInterval","msg","addOtherPlayer","tempSocket","removeAll","sendPlayerUpdate","../entities/player",6,"process","Preload","preload","connect","loadingText","self","load","image","spritesheet","onLoadComplete","connectingText","env","PORT","_process",7,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"html5-multiplayer-test.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","window.game = null;\nwindow.socket = null;\nwindow.loaded = false;\n\nstartGame();\n\nfunction startGame() {\n  game = new Phaser.Game(800, 600, Phaser.AUTO, '');\n  socket = io();\n  \n  game.state.add('boot', require('./states/boot.js'));\n  game.state.add('preload', require('./states/preload.js'));\n  game.state.add('game', require('./states/game.js'));\n    \n  game.state.start('boot');\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nwindow.game = null;\nwindow.socket = null;\nwindow.loaded = false;\n\nstartGame();\n\nfunction startGame() {\n  game = new Phaser.Game(800, 600, Phaser.AUTO, '');\n  socket = io();\n  \n  game.state.add('boot', require('./states/boot.js'));\n  game.state.add('preload', require('./states/preload.js'));\n  game.state.add('game', require('./states/game.js'));\n    \n  game.state.start('boot');\n}\n},{\"./states/boot.js\":4,\"./states/game.js\":5,\"./states/preload.js\":6}],2:[function(require,module,exports){\nvar Bullet = function(x, y, direction, control) {\n    Phaser.Sprite.call(this, game, x, y, 'bullet', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    this.anchor.setTo(0.5, 0.5);\n    this.speed = 1000;\n    switch(direction)\n    {\n      case 'left':\n        this.body.velocity.x = -this.speed;\n        this.angle = 180;\n        break;\n      case 'right':\n        this.body.velocity.x = this.speed;\n        break;\n      case 'up':\n        this.body.velocity.y = -this.speed;\n        this.angle = 270;\n        break;\n      case 'down':\n        this.body.velocity.y = this.speed;\n        this.angle = 90;\n        break;\n    }\n    this.dead = false;\n    setInterval(this.die.bind(this), 300);\n    game.add.existing(this);\n};\n\nBullet.prototype = Object.create(Phaser.Sprite.prototype);\nBullet.prototype.constructor = Bullet;\n\nBullet.prototype.moveUpdate = function(otherPlayers, platforms) {\n  this.bringToTop();\n  if (this.control)\n    game.physics.arcade.overlap(this, otherPlayers, this.hitOtherPlayer, null, this);\n  return (this.game.physics.arcade.overlap(this, platforms) || this.dead);\n};\n\nBullet.prototype.die = function() {\n  this.dead = true;\n};\n\nBullet.prototype.hitOtherPlayer = function(bullet, otherPlayer) {\n  otherPlayer.body.velocity.x += bullet.body.velocity.x;\n  otherPlayer.body.velocity.y += bullet.body.velocity.y;\n  this.dead = true;\n};\n\nmodule.exports = Bullet;\n},{}],3:[function(require,module,exports){\nvar Bullet = require(\"./bullet\");\n\nvar Player = function(control, x, y) {\n    Phaser.Sprite.call(this, game, x, y, 'player', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    if (control)\n      this.body.gravity.y = 3500;\n    this.updatedX = x;\n    this.updatedY = y;\n    this.animations.add('run', [1, 2], 10, true);\n    this.anchor.setTo(0.5, 1);\n    this.scale.x = 2;\n    this.scale.y = 2;\n    this.body.setSize(10, 30, 0, 0);\n    this.tint = '0x' + (Math.round(Math.random()*Math.pow(2, 24))).toString(16);\n    this.nickname = \"Player \" + String(game.rnd.integerInRange(1000, 9999));\n    this.nicknameText = game.add.text(x + 32, y - 16, this.nickname, { fontSize: '16px', fill: '#000' })\n    this.jumping = false;\n    this.jump = 600;\n    this.jumpPrevious = 0;\n    this.jumpAmount = 0;\n    this.jumpLimit = 8;\n    this.moveTimer = 0;\n    this.canShoot = true;\n    this.shootPower = 400;\n    this.shootInterval = setInterval(this.reshoot.bind(this), 120);\n    this.bullets = game.add.group();\n    this.bullets.classType = Bullet;\n    this.bullets.enableBody = true;\n    game.add.existing(this);\n};\n\nPlayer.prototype = Object.create(Phaser.Sprite.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.moveUpdate = function(otherPlayers, platforms, cursors) {\n  game.physics.arcade.collide(this, platforms);\n  if (this.control)\n  {\n    if (game.input.keyboard.isDown(Phaser.Keyboard.A))\n      this.body.velocity.x -= 50;\n    if (game.input.keyboard.isDown(Phaser.Keyboard.D))\n      this.body.velocity.x += 50;\n    if (!game.input.keyboard.isDown(Phaser.Keyboard.A) && !game.input.keyboard.isDown(Phaser.Keyboard.D) && !cursors.left.isDown && !cursors.right.isDown)\n    {\n      if (this.body.velocity.x > 0)\n        this.body.velocity.x -= 50;\n      else if (this.body.velocity.x < 0)\n        this.body.velocity.x += 50;\n      if (Math.abs(this.body.velocity.x) <= 100)\n        this.body.velocity.x = 0;\n    }\n    if (this.body.velocity.x > 800)\n      this.body.velocity.x = 800;\n    else if (this.body.velocity.x < -800)\n      this.body.velocity.x = -800;\n    if (this.body.velocity.x > 400)\n      this.body.velocity.x -= 100;\n    else if (this.body.velocity.x < -400)\n      this.body.velocity.x += 100;\n      \n    if (!this.jumping && game.input.keyboard.isDown(Phaser.Keyboard.W) && this.body.touching.down)\n    {\n      this.jumping = true;\n      this.jumpAmount = 0;\n    }\n    if (this.jumping)\n    {\n      this.body.velocity.y = -this.jump;\n      if (game.input.keyboard.isDown(Phaser.Keyboard.W) && this.jumpAmount <= this.jumpLimit)\n        this.jumpAmount++;\n      else\n        this.jumping = false;\n    }\n    this.jumpPrevious = this.y;\n    \n    if (this.canShoot)\n    {\n      this.addBullet(true, this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown, this.shootPower);\n      if (cursors.left.isDown || cursors.right.isDown || cursors.up.isDown || cursors.down.isDown)\n      {\n        socket.emit(\"bullet\", [this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown]);\n        this.canShoot = false;\n      }\n    }\n    \n    if (this.body.velocity.y != 0 && !this.body.touching.down)\n    {\n      this.animations.stop();\n      this.frame = 3;\n    }\n    else if (this.body.velocity.x != 0)\n    {\n      this.animations.play('run');\n    }\n    else\n    {\n      this.animations.stop();\n      this.frame = 0;\n    }\n    \n    if (this.body.velocity.x == 0 && this.body.velocity.y == 0)\n    {\n      if (this.moveTimer > 0)\n        this.moveTimer--;\n    }\n    else\n      this.moveTimer = 120;\n      \n    game.physics.arcade.overlap(this, this.bullets, this.hitBullet, null, this);\n  }\n  else\n  {\n    if (game.physics.arcade.distanceToXY(this, this.updatedX, this.updatedY) > 64)\n    {\n      this.x = this.updatedX;\n      this.y = this.updatedY;\n    }\n    game.physics.arcade.moveToXY(this, this.updatedX, this.updatedY, 300, 60);\n  }\n  \n  if (this.body.velocity.x != 0)\n  {\n    if (this.body.velocity.x > 0)\n      this.scale.x = 2;\n    else\n      this.scale.x = -2;\n  }\n  \n  var xBorder = 12;\n  var yBorder = 64;\n  if (this.x < -xBorder)\n    this.x = game.world.width + xBorder;\n  else if (this.x > game.world.width + xBorder)\n    this.x = -xBorder;\n    \n  if (this.y < -yBorder)\n    this.y = game.world.height + yBorder;\n  else if (this.y > game.world.height + yBorder)\n    this.y = -yBorder;\n    \n  this.bringToTop();\n  this.nicknameText.bringToTop();\n  this.nicknameText.text = this.nickname;\n  this.nicknameText.x = this.x - 46;\n  this.nicknameText.y = this.y - 84;\n  \n  this.bullets.forEach(function(bullet) {\n    if (bullet.moveUpdate(otherPlayers, platforms))\n      this.bullets.remove(bullet, true);\n  }, this);\n};\n\nPlayer.prototype.destroy = function() {\n  this.nicknameText.destroy();\n  Phaser.Sprite.prototype.destroy.call(this);\n};\n\nPlayer.prototype.reshoot = function() {\n  this.canShoot = true;\n};\n\nPlayer.prototype.addBullet = function(control, x, y, left, right, up, down, shootPower) {\n  if (left)\n  {\n    if (control)\n      this.body.velocity.x += shootPower;\n    this.bullets.add(new Bullet(x, y, 'left', control));\n  }\n  if (right)\n  {\n    if (control)\n      this.body.velocity.x -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'right', control));\n  }\n  if (up)\n  {\n    if (control)\n      this.body.velocity.y += shootPower;\n    this.bullets.add(new Bullet(x, y, 'up', control));\n  }\n  if (down)\n  {\n    if (control)\n      this.body.velocity.y -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'down', control));\n  }\n};\n\nPlayer.prototype.hitBullet = function(player, bullet) {\n  if (!bullet.control)\n  {\n    this.body.velocity.x += bullet.body.velocity.x;\n    this.body.velocity.y += bullet.body.velocity.y;\n    bullet.destroy();\n  }\n};\n\nmodule.exports = Player;\n\n\n},{\"./bullet\":2}],4:[function(require,module,exports){\nvar Boot = function() {}\n\nmodule.exports = Boot;\n\nBoot.prototype = {\n  create: function() {\n    game.scale.scaleMode = Phaser.ScaleManager.RESIZE;\n    game.physics.startSystem(Phaser.Physics.ARCADE);\n    game.world.setBounds(0, 0, 2000, 2000);\n    game.stage.smoothed = false;\n    \n    game.state.start('preload');\n  }\n};\n},{}],5:[function(require,module,exports){\nvar Player = require(\"../entities/player\");\n\nvar Game = function() {};\n\nmodule.exports = Game;\n\nGame.prototype = {\n  sendIntervalTime: 60,\n  fixedSendIntervalTime: 600,\n  initSend: false,\n  buddydistancetimer: 0,\n  \n  create: function() {\n    this.onSocketConnect();\n    this.setEventHandlers();\n    \n    var sky = game.add.sprite(0, 0, 'sky');\n    sky.width = game.world.width;\n    sky.height = game.world.height;\n    \n    this.player = new Player(true, 30, 30);\n    this.player.name = socket.id;\n    game.camera.follow(this.player, Phaser.Camera.FOLLOW_PLATFORMER);\n    this.initSend = true;\n    \n    this.otherPlayers = game.add.group();\n    this.otherPlayers.classType = Player;\n    this.otherPlayers.enableBody = true;\n    \n    this.platforms = game.add.group();\n    this.platforms.enableBody = true;\n    this.addPlatform(0, game.world.height - 64, 2, 2);\n    this.addPlatform(400, 400, 200, 2);\n    this.addPlatform(0, 250, 1, 1);\n    this.addPlatform(600, 300, 1, 1);\n    this.addPlatform(800, 1500, 1, 1);\n    this.addPlatform(1200, 900, 1, 1);\n    \n    this.stars = game.add.group();\n    this.stars.enableBody = true;\n    for (var i = 0; i < 12; i++)\n    {\n      var star = this.stars.create(i * 70, 0, 'star');\n      star.body.gravity.y = 600;\n      star.body.bounce.y = 0.7 + Math.random() * 0.2;\n    }\n    \n    this.cursors = game.input.keyboard.createCursorKeys();\n    \n    this.score = 0;\n    this.scoreText = game.add.text(16, 16, 'Coins: 0', { fontSize: '32px', fill: '#000' });\n    this.scoreText.fixedToCamera = true;\n    \n    /*this.overlay = game.add.sprite(0, 0, 'pixel');\n    this.overlay.width = game.world.width;\n    this.overlay.height = game.world.height;\n    this.overlay.alpha = 0.25;*/\n  },\n  \n  addPlatform: function(x, y, width, height) {\n    var platform = this.platforms.create(x, y, 'ground');\n    platform.scale.setTo(width, height);\n    platform.body.immovable = true;\n    platform.body.checkCollision.left = false;\n    platform.body.checkCollision.right = false;\n    platform.body.checkCollision.down = false;\n  },\n  \n  setEventHandlers: function() {\n    socket.on(\"connect\", this.onSocketConnect.bind(this));\n    socket.on(\"disconnect\", this.onSocketDisconnect.bind(this));\n    socket.on(\"player connect\", this.onPlayerConnect.bind(this));\n    socket.on(\"player update\", this.onPlayerUpdate.bind(this));\n    socket.on(\"player disconnect\", this.onPlayerDisconnect.bind(this));\n    socket.on(\"players\", this.onPlayers.bind(this));\n    socket.on(\"player count\", this.onPlayers.bind(this));\n    socket.on(\"bullet\", this.onBullet.bind(this));\n  },\n\n  update: function() {\n    this.player.moveUpdate(this.otherPlayers, this.platforms, this.cursors);\n    this.game.physics.arcade.collide(this.stars, this.platforms);\n    this.game.physics.arcade.overlap(this.player, this.stars, this.collectStar, null, this);\n    \n    this.otherPlayers.forEach(function(otherPlayer) {\n      otherPlayer.moveUpdate(this.otherPlayers, this.platforms, this.cursors);\n    }, this);\n  },\n\n  collectStar: function(player, star) {\n    star.kill();\n    \n    this.score += 10;\n    this.scoreText.text = 'Coins: ' + this.score;\n  },\n\n  onSocketConnect: function() {\n    console.log(\"connected to server\");\n    this.sendInterval = setInterval(this.sendLoop.bind(this), this.sendIntervalTime);\n    this.sendInterval = setInterval(this.fixedSendLoop.bind(this), this.fixedSendIntervalTime);\n  },\n\n  onSocketDisconnect: function() {\n    console.log(\"disconnected from server\");\n    clearInterval(this.sendInterval);\n    game.state.start('preload');\n  },\n\n  onPlayerConnect: function(msg) {\n    this.addOtherPlayer(msg);\n    console.log(\"new player connected with id \" + msg[1]);\n  },\n\n  onPlayerUpdate: function(msg) {\n    for(var tempSocket in msg) {\n      this.otherPlayers.forEach(function(otherPlayer) {\n        if (msg[tempSocket][0] == otherPlayer.name)\n        {\n          otherPlayer.updatedX = msg[tempSocket][1];\n          otherPlayer.updatedY = msg[tempSocket][2];\n          otherPlayer.frame = msg[tempSocket][3];\n          otherPlayer.body.velocity.x = msg[tempSocket][4];\n          otherPlayer.body.velocity.y = msg[tempSocket][5];\n        }\n      }, this);\n    }\n  },\n\n  onPlayerDisconnect: function(msg) {\n    this.otherPlayers.forEach(function(otherPlayer) {\n      if (msg == \"/#\" + otherPlayer.name)\n      {\n        otherPlayer.destroy();\n        console.log(\"player dced\");\n      }\n    }, this);\n  },\n  \n  onPlayers: function(msg) {\n    this.otherPlayers.removeAll(true);\n    for(var tempSocket in msg) {\n      if (msg[tempSocket][1] != this.player.name)\n        this.addOtherPlayer(msg[tempSocket]);\n    }\n  },\n  \n  onBullet: function(msg) {\n    this.player.addBullet(false, msg[0], msg[1], msg[2], msg[3], msg[4], msg[5], this.player.shootPower);\n  },\n  \n  fixedSendLoop: function() {\n    this.sendPlayerUpdate();\n    socket.emit(\"player count\", this.otherPlayers.length + 1);\n  },\n  \n  sendLoop: function() {\n    if (this.initSend)\n    {\n      socket.emit(\"player init\", [true, this.player.name, this.player.x, this.player.y, this.player.frame, this.player.nickname, this.player.tint, this.player.body.velocity.x, this.player.body.velocity.y]);\n      this.initSend = false;\n    }\n    else if (this.player.body.velocity.x != 0 || this.player.body.velocity.y != 0 || this.player.moveTimer > 0)\n      this.sendPlayerUpdate();\n  },\n  \n  sendPlayerUpdate: function() {\n    socket.emit(\"player update\", [true, this.player.x, this.player.y, this.player.frame, this.player.body.velocity.x, this.player.body.velocity.y]);\n  },\n  \n  addOtherPlayer: function(msg) {\n    var otherPlayer = this.otherPlayers.add(new Player(false, msg[2], msg[3]));\n    otherPlayer.name = msg[1];\n    otherPlayer.frame = msg[4];\n    otherPlayer.nickname = msg[5];\n    otherPlayer.tint = msg[6];\n    otherPlayer.body.velocity.x = msg[7];\n    otherPlayer.body.velocity.y = msg[8];\n  }\n};\n},{\"../entities/player\":3}],6:[function(require,module,exports){\n(function (process){\nvar Preload = function() {}\n\nmodule.exports = Preload;\n\nPreload.prototype = {\n  preload: function() {\n    if (!loaded)\n    {\n      var loadingText = game.add.text(16, 16, 'Loading...', {fontSize: '24px', fill: '#FFFFFF'});\n      var self = this;\n      game.load.image('sky', '../assets/sky.png');\n      game.load.image('ground', '../assets/platform.png');\n      game.load.image('star', '../assets/star.png');\n      game.load.image('bullet', '../assets/bullet.png');\n      game.load.image('pixel', '../assets/pixel.png');\n      game.load.spritesheet('player', '../assets/player.png', 32, 32);\n      game.load.spritesheet('hit', '../assets/hit.png', 32, 32);\n      game.load.onLoadComplete.add(function() {\n        loaded = true;\n        loadingText.destroy();\n        self.connect();\n      });\n    }\n    else\n      this.connect();\n  },\n\n  connect: function() {\n    var connectingText = game.add.text(16, 16, 'Connecting...', {fontSize: '24px', fill: '#FFFFFF'});\n    socket = io.connect(process.env.PORT);\n    socket.on(\"connect\", function() {\n      connectingText.destroy();\n      game.state.start('game');\n    });\n  },\n};\n}).call(this,require('_process'))\n\n},{\"_process\":7}],7:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}]},{},[1])\n\n","var Bullet = function(x, y, direction, control) {\n    Phaser.Sprite.call(this, game, x, y, 'bullet', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    this.anchor.setTo(0.5, 0.5);\n    this.speed = 1000;\n    switch(direction)\n    {\n      case 'left':\n        this.body.velocity.x = -this.speed;\n        this.angle = 180;\n        break;\n      case 'right':\n        this.body.velocity.x = this.speed;\n        break;\n      case 'up':\n        this.body.velocity.y = -this.speed;\n        this.angle = 270;\n        break;\n      case 'down':\n        this.body.velocity.y = this.speed;\n        this.angle = 90;\n        break;\n    }\n    this.dead = false;\n    setInterval(this.die.bind(this), 300);\n    game.add.existing(this);\n};\n\nBullet.prototype = Object.create(Phaser.Sprite.prototype);\nBullet.prototype.constructor = Bullet;\n\nBullet.prototype.moveUpdate = function(otherPlayers, platforms) {\n  this.bringToTop();\n  if (this.control)\n    game.physics.arcade.overlap(this, otherPlayers, this.hitOtherPlayer, null, this);\n  return (this.game.physics.arcade.overlap(this, platforms) || this.dead);\n};\n\nBullet.prototype.die = function() {\n  this.dead = true;\n};\n\nBullet.prototype.hitOtherPlayer = function(bullet, otherPlayer) {\n  otherPlayer.body.velocity.x += bullet.body.velocity.x;\n  otherPlayer.body.velocity.y += bullet.body.velocity.y;\n  this.dead = true;\n};\n\nmodule.exports = Bullet;","var Bullet = require(\"./bullet\");\n\nvar Player = function(control, x, y) {\n    Phaser.Sprite.call(this, game, x, y, 'player', 0);\n    game.physics.arcade.enable(this);\n    this.control = control;\n    if (control)\n      this.body.gravity.y = 3500;\n    this.updatedX = x;\n    this.updatedY = y;\n    this.animations.add('run', [1, 2], 10, true);\n    this.anchor.setTo(0.5, 1);\n    this.scale.x = 2;\n    this.scale.y = 2;\n    this.body.setSize(10, 30, 0, 0);\n    this.tint = '0x' + (Math.round(Math.random()*Math.pow(2, 24))).toString(16);\n    this.nickname = \"Player \" + String(game.rnd.integerInRange(1000, 9999));\n    this.nicknameText = game.add.text(x + 32, y - 16, this.nickname, { fontSize: '16px', fill: '#000' })\n    this.jumping = false;\n    this.jump = 600;\n    this.jumpPrevious = 0;\n    this.jumpAmount = 0;\n    this.jumpLimit = 8;\n    this.moveTimer = 0;\n    this.canShoot = true;\n    this.shootPower = 400;\n    this.shootInterval = setInterval(this.reshoot.bind(this), 120);\n    this.bullets = game.add.group();\n    this.bullets.classType = Bullet;\n    this.bullets.enableBody = true;\n    game.add.existing(this);\n};\n\nPlayer.prototype = Object.create(Phaser.Sprite.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.moveUpdate = function(otherPlayers, platforms, cursors) {\n  game.physics.arcade.collide(this, platforms);\n  if (this.control)\n  {\n    if (game.input.keyboard.isDown(Phaser.Keyboard.A))\n      this.body.velocity.x -= 50;\n    if (game.input.keyboard.isDown(Phaser.Keyboard.D))\n      this.body.velocity.x += 50;\n    if (!game.input.keyboard.isDown(Phaser.Keyboard.A) && !game.input.keyboard.isDown(Phaser.Keyboard.D) && !cursors.left.isDown && !cursors.right.isDown)\n    {\n      if (this.body.velocity.x > 0)\n        this.body.velocity.x -= 50;\n      else if (this.body.velocity.x < 0)\n        this.body.velocity.x += 50;\n      if (Math.abs(this.body.velocity.x) <= 100)\n        this.body.velocity.x = 0;\n    }\n    if (this.body.velocity.x > 800)\n      this.body.velocity.x = 800;\n    else if (this.body.velocity.x < -800)\n      this.body.velocity.x = -800;\n    if (this.body.velocity.x > 400)\n      this.body.velocity.x -= 100;\n    else if (this.body.velocity.x < -400)\n      this.body.velocity.x += 100;\n      \n    if (!this.jumping && game.input.keyboard.isDown(Phaser.Keyboard.W) && this.body.touching.down)\n    {\n      this.jumping = true;\n      this.jumpAmount = 0;\n    }\n    if (this.jumping)\n    {\n      this.body.velocity.y = -this.jump;\n      if (game.input.keyboard.isDown(Phaser.Keyboard.W) && this.jumpAmount <= this.jumpLimit)\n        this.jumpAmount++;\n      else\n        this.jumping = false;\n    }\n    this.jumpPrevious = this.y;\n    \n    if (this.canShoot)\n    {\n      this.addBullet(true, this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown, this.shootPower);\n      if (cursors.left.isDown || cursors.right.isDown || cursors.up.isDown || cursors.down.isDown)\n      {\n        socket.emit(\"bullet\", [this.x, this.y - 32, cursors.left.isDown, cursors.right.isDown, cursors.up.isDown, cursors.down.isDown]);\n        this.canShoot = false;\n      }\n    }\n    \n    if (this.body.velocity.y != 0 && !this.body.touching.down)\n    {\n      this.animations.stop();\n      this.frame = 3;\n    }\n    else if (this.body.velocity.x != 0)\n    {\n      this.animations.play('run');\n    }\n    else\n    {\n      this.animations.stop();\n      this.frame = 0;\n    }\n    \n    if (this.body.velocity.x == 0 && this.body.velocity.y == 0)\n    {\n      if (this.moveTimer > 0)\n        this.moveTimer--;\n    }\n    else\n      this.moveTimer = 120;\n      \n    game.physics.arcade.overlap(this, this.bullets, this.hitBullet, null, this);\n  }\n  else\n  {\n    if (game.physics.arcade.distanceToXY(this, this.updatedX, this.updatedY) > 64)\n    {\n      this.x = this.updatedX;\n      this.y = this.updatedY;\n    }\n    game.physics.arcade.moveToXY(this, this.updatedX, this.updatedY, 300, 60);\n  }\n  \n  if (this.body.velocity.x != 0)\n  {\n    if (this.body.velocity.x > 0)\n      this.scale.x = 2;\n    else\n      this.scale.x = -2;\n  }\n  \n  var xBorder = 12;\n  var yBorder = 64;\n  if (this.x < -xBorder)\n    this.x = game.world.width + xBorder;\n  else if (this.x > game.world.width + xBorder)\n    this.x = -xBorder;\n    \n  if (this.y < -yBorder)\n    this.y = game.world.height + yBorder;\n  else if (this.y > game.world.height + yBorder)\n    this.y = -yBorder;\n    \n  this.bringToTop();\n  this.nicknameText.bringToTop();\n  this.nicknameText.text = this.nickname;\n  this.nicknameText.x = this.x - 46;\n  this.nicknameText.y = this.y - 84;\n  \n  this.bullets.forEach(function(bullet) {\n    if (bullet.moveUpdate(otherPlayers, platforms))\n      this.bullets.remove(bullet, true);\n  }, this);\n};\n\nPlayer.prototype.destroy = function() {\n  this.nicknameText.destroy();\n  Phaser.Sprite.prototype.destroy.call(this);\n};\n\nPlayer.prototype.reshoot = function() {\n  this.canShoot = true;\n};\n\nPlayer.prototype.addBullet = function(control, x, y, left, right, up, down, shootPower) {\n  if (left)\n  {\n    if (control)\n      this.body.velocity.x += shootPower;\n    this.bullets.add(new Bullet(x, y, 'left', control));\n  }\n  if (right)\n  {\n    if (control)\n      this.body.velocity.x -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'right', control));\n  }\n  if (up)\n  {\n    if (control)\n      this.body.velocity.y += shootPower;\n    this.bullets.add(new Bullet(x, y, 'up', control));\n  }\n  if (down)\n  {\n    if (control)\n      this.body.velocity.y -= shootPower;\n    this.bullets.add(new Bullet(x, y, 'down', control));\n  }\n};\n\nPlayer.prototype.hitBullet = function(player, bullet) {\n  if (!bullet.control)\n  {\n    this.body.velocity.x += bullet.body.velocity.x;\n    this.body.velocity.y += bullet.body.velocity.y;\n    bullet.destroy();\n  }\n};\n\nmodule.exports = Player;\n\n","var Boot = function() {}\n\nmodule.exports = Boot;\n\nBoot.prototype = {\n  create: function() {\n    game.scale.scaleMode = Phaser.ScaleManager.RESIZE;\n    game.physics.startSystem(Phaser.Physics.ARCADE);\n    game.world.setBounds(0, 0, 2000, 2000);\n    game.stage.smoothed = false;\n    \n    game.state.start('preload');\n  }\n};","var Player = require(\"../entities/player\");\n\nvar Game = function() {};\n\nmodule.exports = Game;\n\nGame.prototype = {\n  sendIntervalTime: 60,\n  fixedSendIntervalTime: 600,\n  initSend: false,\n  buddydistancetimer: 0,\n  \n  create: function() {\n    this.onSocketConnect();\n    this.setEventHandlers();\n    \n    var sky = game.add.sprite(0, 0, 'sky');\n    sky.width = game.world.width;\n    sky.height = game.world.height;\n    \n    this.player = new Player(true, 30, 30);\n    this.player.name = socket.id;\n    game.camera.follow(this.player, Phaser.Camera.FOLLOW_PLATFORMER);\n    this.initSend = true;\n    \n    this.otherPlayers = game.add.group();\n    this.otherPlayers.classType = Player;\n    this.otherPlayers.enableBody = true;\n    \n    this.platforms = game.add.group();\n    this.platforms.enableBody = true;\n    this.addPlatform(0, game.world.height - 64, 2, 2);\n    this.addPlatform(400, 400, 200, 2);\n    this.addPlatform(0, 250, 1, 1);\n    this.addPlatform(600, 300, 1, 1);\n    this.addPlatform(800, 1500, 1, 1);\n    this.addPlatform(1200, 900, 1, 1);\n    \n    this.stars = game.add.group();\n    this.stars.enableBody = true;\n    for (var i = 0; i < 12; i++)\n    {\n      var star = this.stars.create(i * 70, 0, 'star');\n      star.body.gravity.y = 600;\n      star.body.bounce.y = 0.7 + Math.random() * 0.2;\n    }\n    \n    this.cursors = game.input.keyboard.createCursorKeys();\n    \n    this.score = 0;\n    this.scoreText = game.add.text(16, 16, 'Coins: 0', { fontSize: '32px', fill: '#000' });\n    this.scoreText.fixedToCamera = true;\n    \n    /*this.overlay = game.add.sprite(0, 0, 'pixel');\n    this.overlay.width = game.world.width;\n    this.overlay.height = game.world.height;\n    this.overlay.alpha = 0.25;*/\n  },\n  \n  addPlatform: function(x, y, width, height) {\n    var platform = this.platforms.create(x, y, 'ground');\n    platform.scale.setTo(width, height);\n    platform.body.immovable = true;\n    platform.body.checkCollision.left = false;\n    platform.body.checkCollision.right = false;\n    platform.body.checkCollision.down = false;\n  },\n  \n  setEventHandlers: function() {\n    socket.on(\"connect\", this.onSocketConnect.bind(this));\n    socket.on(\"disconnect\", this.onSocketDisconnect.bind(this));\n    socket.on(\"player connect\", this.onPlayerConnect.bind(this));\n    socket.on(\"player update\", this.onPlayerUpdate.bind(this));\n    socket.on(\"player disconnect\", this.onPlayerDisconnect.bind(this));\n    socket.on(\"players\", this.onPlayers.bind(this));\n    socket.on(\"player count\", this.onPlayers.bind(this));\n    socket.on(\"bullet\", this.onBullet.bind(this));\n  },\n\n  update: function() {\n    this.player.moveUpdate(this.otherPlayers, this.platforms, this.cursors);\n    this.game.physics.arcade.collide(this.stars, this.platforms);\n    this.game.physics.arcade.overlap(this.player, this.stars, this.collectStar, null, this);\n    \n    this.otherPlayers.forEach(function(otherPlayer) {\n      otherPlayer.moveUpdate(this.otherPlayers, this.platforms, this.cursors);\n    }, this);\n  },\n\n  collectStar: function(player, star) {\n    star.kill();\n    \n    this.score += 10;\n    this.scoreText.text = 'Coins: ' + this.score;\n  },\n\n  onSocketConnect: function() {\n    console.log(\"connected to server\");\n    this.sendInterval = setInterval(this.sendLoop.bind(this), this.sendIntervalTime);\n    this.sendInterval = setInterval(this.fixedSendLoop.bind(this), this.fixedSendIntervalTime);\n  },\n\n  onSocketDisconnect: function() {\n    console.log(\"disconnected from server\");\n    clearInterval(this.sendInterval);\n    game.state.start('preload');\n  },\n\n  onPlayerConnect: function(msg) {\n    this.addOtherPlayer(msg);\n    console.log(\"new player connected with id \" + msg[1]);\n  },\n\n  onPlayerUpdate: function(msg) {\n    for(var tempSocket in msg) {\n      this.otherPlayers.forEach(function(otherPlayer) {\n        if (msg[tempSocket][0] == otherPlayer.name)\n        {\n          otherPlayer.updatedX = msg[tempSocket][1];\n          otherPlayer.updatedY = msg[tempSocket][2];\n          otherPlayer.frame = msg[tempSocket][3];\n          otherPlayer.body.velocity.x = msg[tempSocket][4];\n          otherPlayer.body.velocity.y = msg[tempSocket][5];\n        }\n      }, this);\n    }\n  },\n\n  onPlayerDisconnect: function(msg) {\n    this.otherPlayers.forEach(function(otherPlayer) {\n      if (msg == \"/#\" + otherPlayer.name)\n      {\n        otherPlayer.destroy();\n        console.log(\"player dced\");\n      }\n    }, this);\n  },\n  \n  onPlayers: function(msg) {\n    this.otherPlayers.removeAll(true);\n    for(var tempSocket in msg) {\n      if (msg[tempSocket][1] != this.player.name)\n        this.addOtherPlayer(msg[tempSocket]);\n    }\n  },\n  \n  onBullet: function(msg) {\n    this.player.addBullet(false, msg[0], msg[1], msg[2], msg[3], msg[4], msg[5], this.player.shootPower);\n  },\n  \n  fixedSendLoop: function() {\n    this.sendPlayerUpdate();\n    socket.emit(\"player count\", this.otherPlayers.length + 1);\n  },\n  \n  sendLoop: function() {\n    if (this.initSend)\n    {\n      socket.emit(\"player init\", [true, this.player.name, this.player.x, this.player.y, this.player.frame, this.player.nickname, this.player.tint, this.player.body.velocity.x, this.player.body.velocity.y]);\n      this.initSend = false;\n    }\n    else if (this.player.body.velocity.x != 0 || this.player.body.velocity.y != 0 || this.player.moveTimer > 0)\n      this.sendPlayerUpdate();\n  },\n  \n  sendPlayerUpdate: function() {\n    socket.emit(\"player update\", [true, this.player.x, this.player.y, this.player.frame, this.player.body.velocity.x, this.player.body.velocity.y]);\n  },\n  \n  addOtherPlayer: function(msg) {\n    var otherPlayer = this.otherPlayers.add(new Player(false, msg[2], msg[3]));\n    otherPlayer.name = msg[1];\n    otherPlayer.frame = msg[4];\n    otherPlayer.nickname = msg[5];\n    otherPlayer.tint = msg[6];\n    otherPlayer.body.velocity.x = msg[7];\n    otherPlayer.body.velocity.y = msg[8];\n  }\n};","var Preload = function() {}\n\nmodule.exports = Preload;\n\nPreload.prototype = {\n  preload: function() {\n    if (!loaded)\n    {\n      var loadingText = game.add.text(16, 16, 'Loading...', {fontSize: '24px', fill: '#FFFFFF'});\n      var self = this;\n      game.load.image('sky', '../assets/sky.png');\n      game.load.image('ground', '../assets/platform.png');\n      game.load.image('star', '../assets/star.png');\n      game.load.image('bullet', '../assets/bullet.png');\n      game.load.image('pixel', '../assets/pixel.png');\n      game.load.spritesheet('player', '../assets/player.png', 32, 32);\n      game.load.spritesheet('hit', '../assets/hit.png', 32, 32);\n      game.load.onLoadComplete.add(function() {\n        loaded = true;\n        loadingText.destroy();\n        self.connect();\n      });\n    }\n    else\n      this.connect();\n  },\n\n  connect: function() {\n    var connectingText = game.add.text(16, 16, 'Connecting...', {fontSize: '24px', fill: '#FFFFFF'});\n    socket = io.connect(process.env.PORT);\n    socket.on(\"connect\", function() {\n      connectingText.destroy();\n      game.state.start('game');\n    });\n  },\n};","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"]}